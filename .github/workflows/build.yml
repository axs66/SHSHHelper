name: Build SHSHHelper Tweak (Auto Release)

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 获取仓库代码
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # 安装依赖
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential clang llvm fakeroot dpkg-dev zip git curl make jq

      # 安装 ldid
      - name: Install ldid
        run: |
          curl -LO https://github.com/ProcursusTeam/ldid/releases/latest/download/ldid_linux_x86_64
          chmod +x ldid_linux_x86_64
          sudo mv ldid_linux_x86_64 /usr/local/bin/ldid

      # 安装 Theos
      - name: Setup Theos
        run: |
          git clone --recursive https://github.com/theos/theos.git ~/theos

      # 设置 Theos 环境变量（⚠️注意不能写 export）
      - name: Set Theos environment
        run: |
          echo "THEOS=$HOME/theos" >> $GITHUB_ENV
          echo "THEOS_MAKE_PATH=$HOME/theos/makefiles" >> $GITHUB_ENV

      # ✅ 调试：列出仓库根目录的文件，确认没有旧的 ccmodule.mk
      - name: Check for leftover ccmodule.mk
        run: |
          echo "查找是否有残留的 ccmodule.mk："
          find . -name "ccmodule.mk" || true

      # ✅ 清理之前的构建缓存
      - name: Clean previous build artifacts
        run: |
          rm -rf .theos/ *.deb packages/ || true

      # 编译插件
      - name: Build the tweak
        run: |
          make clean
          make package

      # 打包 .deb 为 ZIP
      - name: Zip deb output
        run: |
          zip -r SHSHHelperOutput.zip *.deb

      # 创建 GitHub Release（固定 tag 为 v1.0.0）
      - name: Create Release
        id: create_release
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.PAT }}" \
            -H "Content-Type: application/json" \
            -d '{"tag_name": "v1.0.0", "name": "v1.0.0", "body": "SHSHHelper tweak release"}' \
            https://api.github.com/repos/${{ github.repository }}/releases

      # 上传 ZIP 到 Release
      - name: Upload .deb to Release
        run: |
          RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.PAT }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/v1.0.0 | jq -r .id)

          curl -X POST \
            -H "Authorization: token ${{ secrets.PAT }}" \
            -H "Content-Type: application/zip" \
            --data-binary @SHSHHelperOutput.zip \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${RELEASE_ID}/assets?name=SHSHHelperOutput.zip"
